<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan
		base-package="com.springbook.biz"></context:component-scan>

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<context:property-placeholder
		location="classpath:config/database.properties" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.springbook.biz..impl.*(..))" id="txPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>
	<!-- <aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.get*(..))" 
		/> -->
	<!-- <aop:config> <aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" 
		id="allPointcut" /> <aop:aspect ref="logAdvice"> <aop:before pointcut-ref="allPointcut" 
		method="printLog" /> </aop:aspect> <aop:aspect ref="afterReturningAdvice"> 
		<aop:after-returning pointcut-ref="allPointcut" method="afterLog" returning="returnObj" 
		/> </aop:aspect> <aop:aspect ref="afther"> <aop:after-throwing pointcut-ref="allPointcut" 
		method="exceptionLog" /> </aop:aspect> <aop:aspect ref="afterAdvice"> <aop:after 
		pointcut-ref="allPointcut" method="finallyLog" /> </aop:aspect> <aop:aspect 
		ref="aroundAdvice"> <aop:around pointcut-ref="allPointcut" method="aroundLog" 
		/> </aop:aspect> </aop:config> -->


	<!-- <bean id="userServiceImpl" class="com.springbook.biz.user.impl.UserServiceImpl"> 
		<property name="dao" ref="userDAO"></property> </bean> <bean id="userDAO" 
		class="com.springbook.biz.user.impl.UserDAO"></bean> -->


	<!-- <bean id="samsungTV" class="polymorphism.SamsungTV"> scope="prototype" 
		<constructor-arg ref="apple"></constructor-arg> <constructor-arg value="270000"></constructor-arg> 
		<property name="speaker" ref="apple"></property> <property name="price" value="27000"></property> 
		</bean> <bean id="lgTV" class="polymorphism.LgTV"></bean> <bean id="sony" 
		class="polymorphism.SonySpeaker"></bean> <bean id="apple" class="polymorphism.AppleSpeaker"></bean> 
		<bean id="collectionBean" class="com.springbook.ioc.injection.CollectionBean"> 
		<property name="addressList"> <list> <value>서울시 강남구</value> <value>서울시 영등포구</value> 
		</list> <set value-type="java.lang.String"> <value>서울시 강남구</value> <value>서울시 
		영등포구 </value> <value>서울시 영등포구</value> </set> <map> <entry> <key> <value>고길동</value> 
		</key> <value>서울시 강남구</value> </entry> <entry> <key> <value>홍길동</value> </key> 
		<value>서울시 영등포구 </value> </entry> </map> <props> <prop key="고길동">서울시 강남구</prop> 
		<prop key="홍길동">서울시 영등포구</prop> </props> </property> </bean> -->

</beans>
